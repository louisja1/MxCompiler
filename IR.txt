void @GlobalDeclaration() { 
	@GlobalDeclaration.0.enter :
		jump @GlobalDeclaration.1.exit
	@GlobalDeclaration.1.exit :
}
func main() { 
	main.0.enter :
		mov $t1(rdi) 18
		mov $t2(rsi) 12
		mov $t3(rdx) 6
		call tak 6
		mov $t4(null) $t0(rax)
		ret $t4(null)
		jump main.1.exit
	main.1.exit :
}
func tak(x, y, z) { 
	tak.0.enter :
		mov $x(null) $t5(rdi)
		mov $y(null) $t6(rsi)
		mov $z(null) $t7(rdx)
		cmp $y(null) $x(null)
		set LE $t8(null)
		cmp $t8(null) 1
		cjump EQ tak.1.if_true
		jump tak.2.if_false
	tak.1.if_true :
		mov $t9(null) $x(null)
		SUB $t9(null) 1
		mov $t11(rdi) $t9(null)
		mov $t12(rsi) $y(null)
		mov $t13(rdx) $z(null)
		call tak $z(null)
		mov $t14(null) $t10(rax)
		mov $t15(null) $y(null)
		SUB $t15(null) 1
		mov $t17(rdi) $t15(null)
		mov $t18(rsi) $z(null)
		mov $t19(rdx) $x(null)
		call tak $x(null)
		mov $t20(null) $t16(rax)
		mov $t21(null) $z(null)
		SUB $t21(null) 1
		mov $t23(rdi) $t21(null)
		mov $t24(rsi) $x(null)
		mov $t25(rdx) $y(null)
		call tak $y(null)
		mov $t26(null) $t22(rax)
		mov $t28(rdi) $t14(null)
		mov $t29(rsi) $t20(null)
		mov $t30(rdx) $t26(null)
		call tak $t26(null)
		mov $t31(null) $t27(rax)
		mov $t32(null) 1
		ADD $t32(null) $t31(null)
		ret $t32(null)
		jump tak.4.exit
	tak.2.if_false :
		ret $z(null)
		jump tak.4.exit
	tak.3.if_exit :
		jump tak.4.exit
	tak.4.exit :
}
